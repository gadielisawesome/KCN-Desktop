<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="CloseThisWindow.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>